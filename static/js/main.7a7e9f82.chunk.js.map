{"version":3,"sources":["utils/helpers.js","components/Controls/Controls.jsx","App.jsx","index.jsx"],"names":["setTimeFormat","totalSecs","seconds","minutes","Math","floor","hours","hoursFormat","minutesFormat","secondsFormant","Controls","time","start","stop","reset","wait","className","type","onClick","App","useState","state","setState","setTime","stop$","useMemo","Subject","click$","useCallback","next","useEffect","doubleClick$","pipe","buffer","debounceTime","map","list","length","filter","value","subscribtion$","Observable","observer","count","intervalId","setInterval","console","log","clearInterval","takeUntil","subscribe","prev","unsubscribe","ReactDOM","render","document","getElementById"],"mappings":"iPAeeA,EAfO,SAACC,GACrB,IAAMC,EAAWD,EAAY,GACvBE,EAAUC,KAAKC,MAAMJ,EAAY,IACjCK,EAAQF,KAAKC,MAAMJ,EAAY,MAC/BM,EAAeD,EAAQ,GAAKA,EAAQ,GACtC,KACCA,GAAS,GAAKA,GAAS,EAAxB,WAAiCA,GAAjC,UAA8CA,GAC5CE,EAAiBL,EAAU,GACf,IAAZA,EAAiB,KAAlB,WAA6BA,GADZ,UAEfA,GACDM,EAAkBP,EAAU,GAAX,WAAqBA,GAArB,UAAoCA,GAE3D,MAAM,GAAN,OAAUK,EAAV,YAAyBC,EAAzB,YAA0CC,I,OCR/BC,EAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,KACAC,EAFsB,EAEtBA,MACAC,EAHsB,EAGtBA,KACAC,EAJsB,EAItBA,MACAC,EALsB,EAKtBA,KALsB,OAOtB,qCACE,wBAAQC,UAAU,SAAlB,SACE,oBAAIA,UAAU,kBAAd,SACGhB,EAAcW,OAGnB,yBAASK,UAAU,OAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,iBAAiBE,QAASN,EAA1D,mBAGA,wBAAQK,KAAK,SAASD,UAAU,iBAAiBE,QAASL,EAA1D,kBAGA,wBAAQI,KAAK,SAASD,UAAU,iBAAiBE,QAASJ,EAA1D,mBAGA,wBAAQG,KAAK,SAASD,UAAU,iBAAiBE,QAASH,EAA1D,2BC8DOI,EAzEH,WAAO,IAAD,EACUC,mBAAS,QADnB,mBACTC,EADS,KACFC,EADE,OAEQF,mBAAS,GAFjB,mBAETT,EAFS,KAEHY,EAFG,KAIVC,EAAQC,mBAAQ,kBAAM,IAAIC,MAAW,IACrCC,EAASF,mBAAQ,kBAAM,IAAIC,MAAW,IAMtCb,EAAOe,uBAAY,WACvBL,EAAQ,GACRD,EAAS,UACR,IAEGR,EAAQc,uBAAY,WACxBL,EAAQ,KACP,IAEGR,EAAOa,uBAAY,WACvBD,EAAOE,OACPP,EAAS,QACTK,EAAOE,SACN,IAoCH,OAlCAC,qBAAU,WACR,IAAMC,EAAeJ,EAAOK,KAC1BC,YAAON,EAAOK,KAAKE,YAAa,OAChCC,aAAI,SAACC,GAAD,OAAUA,EAAKC,UACnBC,aAAO,SAACC,GAAD,OAAWA,GAAS,MAcvBC,EAZS,IAAIC,KAAW,SAACC,GAC7B,IAAIC,EAAQ,EACNC,EAAaC,aAAY,WAC7BH,EAASb,KAAKc,GAAS,GACvBG,QAAQC,IAAIJ,KACX,KAEH,OAAO,WACLK,cAAcJ,OAKfZ,KAAKiB,YAAUlB,IACfC,KAAKiB,YAAUzB,IACf0B,UAAU,CACTrB,KAAM,WACU,UAAVR,GACFE,GAAQ,SAAC4B,GAAD,OAAUA,EAAO,QAKjC,OAAQ,WACNX,EAAcY,iBAEf,CAAC/B,IAGF,yBAASL,UAAU,QAAnB,SACE,cAAC,EAAD,CACEL,KAAMA,EACNC,MAzDQ,WACZU,EAAS,UAyDLT,KAAMA,EACNC,MAAOA,EACPC,KAAMA,OC9EdsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7a7e9f82.chunk.js","sourcesContent":["const setTimeFormat = (totalSecs) => {\n  const seconds = (totalSecs % 60);\n  const minutes = Math.floor(totalSecs / 60);\n  const hours = Math.floor(totalSecs / 3600);\n  const hoursFormat = (hours < 1 || hours > 23)\n    ? '00'\n    : (hours >= 1 && hours <= 9) ? `0${hours}` : `${hours}`;\n  const minutesFormat = (minutes < 10)\n    ? ((minutes === 0) ? '00' : `0${minutes}`)\n    : `${minutes}`;\n  const secondsFormant = (seconds < 10) ? `0${seconds}` : `${seconds}`;\n\n  return `${hoursFormat}:${minutesFormat}:${secondsFormant}`;\n};\n\nexport default setTimeFormat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport setTimeFormat from '../../utils/helpers';\n\nexport const Controls = ({\n  time,\n  start,\n  stop,\n  reset,\n  wait,\n}) => (\n  <>\n    <header className=\"header\">\n      <h1 className=\"watch indicator\">\n        {setTimeFormat(time)}\n      </h1>\n    </header>\n    <section className=\"main\">\n      <div className=\"container\">\n        <button type=\"button\" className=\"button is-dark\" onClick={start}>\n          Start\n        </button>\n        <button type=\"button\" className=\"button is-dark\" onClick={stop}>\n          Stop\n        </button>\n        <button type=\"button\" className=\"button is-dark\" onClick={reset}>\n          Reset\n        </button>\n        <button type=\"button\" className=\"button is-dark\" onClick={wait}>\n          Wait\n        </button>\n      </div>\n    </section>\n  </>\n);\n\nControls.propTypes = {\n  time: PropTypes.number.isRequired,\n  start: PropTypes.func.isRequired,\n  stop: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  wait: PropTypes.func.isRequired,\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  map,\n  buffer,\n  debounceTime,\n  filter,\n  takeUntil,\n} from 'rxjs/operators';\n\nimport { Controls } from './components/Controls';\n\nconst App = () => {\n  const [state, setState] = useState('stop');\n  const [time, setTime] = useState(0);\n\n  const stop$ = useMemo(() => new Subject(), []);\n  const click$ = useMemo(() => new Subject(), []);\n\n  const start = () => {\n    setState('start');\n  };\n\n  const stop = useCallback(() => {\n    setTime(0);\n    setState('stop');\n  }, []);\n\n  const reset = useCallback(() => {\n    setTime(0);\n  }, []);\n\n  const wait = useCallback(() => {\n    click$.next();\n    setState('wait');\n    click$.next();\n  }, []);\n\n  useEffect(() => {\n    const doubleClick$ = click$.pipe(\n      buffer(click$.pipe(debounceTime(300))),\n      map((list) => list.length),\n      filter((value) => value >= 2),\n    );\n    const timer$ = new Observable((observer) => {\n      let count = 0;\n      const intervalId = setInterval(() => {\n        observer.next(count += 1);\n        console.log(count);\n      }, 1000);\n\n      return () => {\n        clearInterval(intervalId);\n      };\n    });\n\n    const subscribtion$ = timer$\n      .pipe(takeUntil(doubleClick$))\n      .pipe(takeUntil(stop$))\n      .subscribe({\n        next: () => {\n          if (state === 'start') {\n            setTime((prev) => prev + 1);\n          }\n        },\n      });\n\n    return (() => {\n      subscribtion$.unsubscribe();\n    });\n  }, [state]);\n\n  return (\n    <section className=\"watch\">\n      <Controls\n        time={time}\n        start={start}\n        stop={stop}\n        reset={reset}\n        wait={wait}\n      />\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}